# -*- coding: utf-8 -*-
"""Trabalho 1: Análise Exploratória de Dados .ipynb

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1yybzN86sf2FCS_fSUuEyOd9pKHTcMbW3

#*Trabalho 1*
------------------------------------------------------------------
#Análise Exploratória de Dados

- **Professor:** Iális Cavalcante
- **Disciplina:** TÓPICOS ESPECIAIS EM COMPUTAÇÃO I
- **Curso:** Engenharia da Computação
- **Descrição:**
Nesse trabalho iremos ultilizar os conhecimentos de análise exploratória de dados adquiridos em sala, para tratar e explorar um data set sobre os países mais perigosos do mundo
------------------------------------------------------------------
- **Como usar?** Crie uma cópia do colab para o seu drive, e em "Importando o dataset" altere o caminho do dataset para o caminho do arquivo do seu drive!

#**Equipe:**
- Francisco Wendel Alves Ribeiro - 510424
- Gabriel Araújo Teixeira - 511476
- Gabriel Cavalcante Alves Mesquita - 519389
- Gabriel Vasconcelos Santos - 497688
- Hítalo Rodrigues de Oliveira - 402885
- Ionara Brandão Santanna - 389107

#**Instalações e Importações:**
"""

!pip install plotly --upgrade

import plotly.graph_objects as go
import matplotlib.pyplot as plt
import plotly.express as px
import seaborn as sns
import pandas as pd
import numpy as np

from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_absolute_error
from sklearn.metrics import mean_squared_error
from sklearn.metrics import max_error

"""#**Importando o dataset:**"""

from google.colab import drive
drive.mount('/content/drive')

intentional_homicide = pd.read_csv('https://drive.google.com/file/d/1vQAfugSibLx6EA2_t5vysnv-LaQDL01O/view')
intentional_homicide

"""#**Garantindo que a clouna 'Value' seja numérica:**"""

intentional_homicide['VALUE'] = pd.to_numeric(intentional_homicide['VALUE'], errors='coerce')

intentional_homicide = intentional_homicide.dropna(subset=['VALUE'])

"""#**Quais países apresentam os 10 maiores índices de homicídios nos últimos 5 anos?**"""

anos_recentes = intentional_homicide['Year'].max() - 4
dados_ultimos_5_anos = intentional_homicide[intentional_homicide['Year'] >= anos_recentes]

homicidios_por_pais = dados_ultimos_5_anos.groupby('Country')['VALUE'].sum().reset_index()

top_10_paises = homicidios_por_pais.sort_values(by='VALUE', ascending=False).head(10)

print(top_10_paises)

plt.figure(figsize=(12, 8))
plt.barh(top_10_paises['Country'], top_10_paises['VALUE'], color='skyblue')
plt.xlabel('Número Total de Homicídios')
plt.ylabel('País')
plt.title('Top 10 Países com Maiores Índices de Homicídios nos Últimos 5 Anos')
plt.gca().invert_yaxis()
plt.show()

"""#**Quais países apresentam os 10 maiores índices de homicidios de mulheres em 2022?**"""

dados_2022 = intentional_homicide[(intentional_homicide['Year'] == 2022) & (intentional_homicide['Sex'] == 'Female')]

homicidios_femininos_por_pais = dados_2022.groupby('Country')['VALUE'].sum().reset_index()

top_10_paises_femininos = homicidios_femininos_por_pais.sort_values(by='VALUE', ascending=False).head(10)

plt.figure(figsize=(12, 8))
plt.barh(top_10_paises_femininos['Country'], top_10_paises_femininos['VALUE'], color='salmon')
plt.xlabel('Número Total de Homicídios de Mulheres')
plt.ylabel('País')
plt.title('Top 10 Países com Maiores Índices de Homicídios de Mulheres em 2022')
plt.gca().invert_yaxis()
plt.show()

"""#**Regiões com mais homicídios?**"""

sub_region_country = intentional_homicide.groupby(['Subregion', 'Country'])['VALUE'].sum().reset_index()

sub_region_country_sorted = sub_region_country.sort_values(by=['VALUE'], ascending=True)

homicide_totals = intentional_homicide[intentional_homicide['Indicator'].str.contains('Victims of intentional homicide', na=False)]
region_homicides = homicide_totals.groupby('Region')['VALUE'].sum().sort_values(ascending=False).reset_index()
region_homicides

fig1 = px.bar(region_homicides, x='Region', y='VALUE', title='Regiões com mais homicídios', labels={'VALUE': 'Total de Homicídios'})
fig1.show()

"""#**Quais países com menor número de homicídios em cada subregião?**"""

sub_region = intentional_homicide.groupby('Subregion')['VALUE'].sum().reset_index()

sub_region_sorted = sub_region.sort_values(by='VALUE', ascending=False)

sub_region_country_sorted.head(10)

plt.figure(figsize=(14, 8))
sns.barplot(x='VALUE', y='Country', hue='Subregion', data=sub_region_country_sorted.head(10), dodge=False)
plt.title('Top 10 Países com Menor Número de Homicídios em Cada Subregião')
plt.xlabel('Número de Homicídios')
plt.ylabel('País')
plt.legend(title='Subregião', bbox_to_anchor=(1.05, 1), loc='upper left')
plt.show()

"""#**Quais países com menor número de morte de mulheres?**"""

female_homicides = intentional_homicide[(intentional_homicide['Sex'] == 'Female') & (intentional_homicide['Unit of measurement'] == 'Counts')]
countries_female_homicides = female_homicides.groupby('Country')['VALUE'].sum().sort_values().reset_index()

top_countries = countries_female_homicides.head(10)
top_countries

plt.figure(figsize=(10, 6))
plt.barh(top_countries['Country'], top_countries['VALUE'], color='skyblue')
plt.xlabel('Número de Mortes')
plt.ylabel('Países')
plt.title('Países com Menor Número de Mortes de Mulheres')
plt.gca().invert_yaxis()
plt.show()

"""#**Quais as subregiões com maior número de homicídios?**"""

sub_region_sorted.head(10)

plt.figure(figsize=(14, 8))
sns.barplot(x='VALUE', y='Subregion', data=sub_region_sorted.head(10))
plt.title('Top 10 Subregiões com Maior Número de Homicídios')
plt.xlabel('Número de Homicídios')
plt.ylabel('Subregião')
plt.show()

plt.figure(figsize=(14, 8))
plt.pie(sub_region_sorted.head(10)['VALUE'], labels=sub_region_sorted.head(10)['Subregion'], autopct='%1.1f%%', startangle=140)
plt.title('Top 10 Subregiões com Maior Número de Homicídios')
plt.show()

"""#**Indentifique o país com maior número de homicídios em cada continente em 2020**"""

homicidios_2020 = intentional_homicide[(intentional_homicide['Year'] == 2020) & (intentional_homicide['Indicator'] == 'Victims of intentional homicide')]
homicidios_continente = homicidios_2020.groupby(['Region', 'Country'])['VALUE'].sum().reset_index()
maior_homicidios_continente = homicidios_continente.loc[homicidios_continente.groupby('Region')['VALUE'].idxmax()]
maior_homicidios_continente

plt.figure(figsize=(14, 8))
sns.barplot(x='VALUE', y='Country', hue='Region', data=maior_homicidios_continente, dodge=False)
plt.title('País com maior número de homicídios em cada continente em 2020')
plt.xlabel('Número de Homicídios')
plt.ylabel('País')
plt.legend(title='Continente', bbox_to_anchor=(1.05, 1), loc='upper left')
plt.show()

"""#**Qual o país com mais violento para as mulheres em 2021?**"""

violencia_mulheres_2021 = intentional_homicide[(intentional_homicide['Year'] == 2021) &
                                                (intentional_homicide['Indicator'] == 'Victims of intentional homicide') &
                                                (intentional_homicide['Sex'] == 'Female')]

pais_mais_violento_mulheres = violencia_mulheres_2021.loc[violencia_mulheres_2021['VALUE'].idxmax()]

print("\nPaís mais violento para as mulheres em 2021:")
print("Country    Region    VALUE")
print(pais_mais_violento_mulheres['Country'],"    ", pais_mais_violento_mulheres['Region'],"   ", pais_mais_violento_mulheres['VALUE'])

plt.figure(figsize=(1, 3))
plt.bar(pais_mais_violento_mulheres['Country'],pais_mais_violento_mulheres['VALUE'], color='red', width=0.2)
plt.xlabel('País')
plt.ylabel('Número Total de Homicídios')
plt.title('País mais violento para as mulheres em 2021')
plt.show()

#Extra, forma alternativa de responder a pergunta 8 utilizando o duckdb e a sintaxe sql.
import duckdb as duck
conn = duck.connect()
conn.register('intentional_homicide', intentional_homicide)
query = '''
SELECT
    country,
    MAX(VALUE) AS max_value
FROM
    intentional_homicide
WHERE
    year = 2021
    AND sex = 'Female'
GROUP BY
    country
ORDER BY
    max_value DESC
LIMIT 1;
'''
resultado = conn.execute(query).df()

print(resultado)

"""#**Qual o país com maior valor de 'indicador: Victims of intentional homicide'?**"""

victimas_homicidio = intentional_homicide[intentional_homicide['Indicator'] == 'Victims of intentional homicide']
pais_maior_vitimas_homicidio = victimas_homicidio.loc[victimas_homicidio['VALUE'].idxmax()]


print("\nPaís com maior valor de 'Victims of intentional homicide':")
print("Country    Region    VALUE")
print(pais_maior_vitimas_homicidio['Country'],"    ", pais_maior_vitimas_homicidio['Region'],"   ", pais_maior_vitimas_homicidio['VALUE'])

plt.figure(figsize=(1, 3))
plt.bar(pais_maior_vitimas_homicidio['Country'],pais_maior_vitimas_homicidio['VALUE'], color='red', width=0.2)
plt.xlabel('País')
plt.ylabel('Número Total de Homicídios')
plt.title('Vítimas de homicidio')
plt.show()

"""#**Qual a média de homicídios no Brasil nos últimos 10 anos?**"""

homicidios_brasil_10_anos = intentional_homicide[(intentional_homicide['Country'] == 'Brazil') &
                                 (intentional_homicide['Indicator'] == 'Victims of intentional homicide') &
                                 (intentional_homicide['Year'] >= (intentional_homicide['Year'].max() - 10))]
media_homicidios_brasil = homicidios_brasil_10_anos['VALUE'].mean()

print("\nMédia de homicídios no Brasil nos últimos 10 anos:")
print(media_homicidios_brasil)